package com.ayantsoft.interview.hibernate.pojo;
// Generated 6 Dec, 2016 12:26:16 PM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Candidate generated by hbm2java
 */
@Entity
@Table(name = "candidate", catalog = "interview_tracker")
public class Candidate implements java.io.Serializable {

	private Integer id;
	private ContactAdddress contactAdddress;
	private Doument doument;
	private JobConsultancy jobConsultancy;
	private String fullname;
	private Date dateOfBirth;
	private String gender;
	private String maritalStatus;
	private String appliedFor;
	private String remarks;
	private Double expectedCtc;
	private Double currentCtc;
	private Integer noticePeriod;
	private String reference;
	private Double offeredCtc;
	private Date interviewSchduleDate;
	private String interviewBy;
	private Date dateOfJoining;
	private Date interviewDate;
	private String status;
	private String qualification;
	private String recrutmentStatus;
	private Double yearsOfExperienc;
	private String currentEmployer;

	public Candidate() {
	}

	public Candidate(ContactAdddress contactAdddress, JobConsultancy jobConsultancy) {
		this.contactAdddress = contactAdddress;
		this.jobConsultancy = jobConsultancy;
	}

	public Candidate(ContactAdddress contactAdddress, Doument doument, JobConsultancy jobConsultancy, String fullname,
			Date dateOfBirth, String gender, String maritalStatus, String appliedFor, String remarks,
			Double expectedCtc, Double currentCtc, Integer noticePeriod, String reference, Double offeredCtc,
			Date interviewSchduleDate, String interviewBy, Date dateOfJoining, Date interviewDate, String status,
			String qualification, String recrutmentStatus, Double yearsOfExperienc, String currentEmployer) {
		this.contactAdddress = contactAdddress;
		this.doument = doument;
		this.jobConsultancy = jobConsultancy;
		this.fullname = fullname;
		this.dateOfBirth = dateOfBirth;
		this.gender = gender;
		this.maritalStatus = maritalStatus;
		this.appliedFor = appliedFor;
		this.remarks = remarks;
		this.expectedCtc = expectedCtc;
		this.currentCtc = currentCtc;
		this.noticePeriod = noticePeriod;
		this.reference = reference;
		this.offeredCtc = offeredCtc;
		this.interviewSchduleDate = interviewSchduleDate;
		this.interviewBy = interviewBy;
		this.dateOfJoining = dateOfJoining;
		this.interviewDate = interviewDate;
		this.status = status;
		this.qualification = qualification;
		this.recrutmentStatus = recrutmentStatus;
		this.yearsOfExperienc = yearsOfExperienc;
		this.currentEmployer = currentEmployer;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "contact_address_id", nullable = false)
	public ContactAdddress getContactAdddress() {
		return this.contactAdddress;
	}

	public void setContactAdddress(ContactAdddress contactAdddress) {
		this.contactAdddress = contactAdddress;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "doc_id")
	public Doument getDoument() {
		return this.doument;
	}
	public void setDoument(Doument doument) {
		this.doument = doument;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "consultant_id", nullable = false)
	public JobConsultancy getJobConsultancy() {
		return this.jobConsultancy;
	}
	public void setJobConsultancy(JobConsultancy jobConsultancy) {
		this.jobConsultancy = jobConsultancy;
	}

	@Column(name = "fullname", length = 50)
	public String getFullname() {
		return this.fullname;
	}
	public void setFullname(String fullname) {
		this.fullname = fullname;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date_of_birth", length = 10)
	public Date getDateOfBirth() {
		return this.dateOfBirth;
	}
	public void setDateOfBirth(Date dateOfBirth) {
		this.dateOfBirth = dateOfBirth;
	}

	@Column(name = "gender", length = 45)
	public String getGender() {
		return this.gender;
	}
	public void setGender(String gender) {
		this.gender = gender;
	}

	@Column(name = "marital_status", length = 45)
	public String getMaritalStatus() {
		return this.maritalStatus;
	}
	public void setMaritalStatus(String maritalStatus) {
		this.maritalStatus = maritalStatus;
	}

	@Column(name = "applied_for", length = 50)
	public String getAppliedFor() {
		return this.appliedFor;
	}
	public void setAppliedFor(String appliedFor) {
		this.appliedFor = appliedFor;
	}

	@Column(name = "remarks", length = 100)
	public String getRemarks() {
		return this.remarks;
	}
	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}

	@Column(name = "expected_ctc", precision = 10)
	public Double getExpectedCtc() {
		return this.expectedCtc;
	}
	public void setExpectedCtc(Double expectedCtc) {
		this.expectedCtc = expectedCtc;
	}

	@Column(name = "current_ctc", precision = 10)
	public Double getCurrentCtc() {
		return this.currentCtc;
	}
	public void setCurrentCtc(Double currentCtc) {
		this.currentCtc = currentCtc;
	}

	@Column(name = "notice_period")
	public Integer getNoticePeriod() {
		return this.noticePeriod;
	}
	public void setNoticePeriod(Integer noticePeriod) {
		this.noticePeriod = noticePeriod;
	}

	@Column(name = "reference", length = 50)
	public String getReference() {
		return this.reference;
	}
	public void setReference(String reference) {
		this.reference = reference;
	}

	@Column(name = "offered_ctc", precision = 10)
	public Double getOfferedCtc() {
		return this.offeredCtc;
	}
	public void setOfferedCtc(Double offeredCtc) {
		this.offeredCtc = offeredCtc;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "interview_schdule_date", length = 10)
	public Date getInterviewSchduleDate() {
		return this.interviewSchduleDate;
	}
	public void setInterviewSchduleDate(Date interviewSchduleDate) {
		this.interviewSchduleDate = interviewSchduleDate;
	}

	@Column(name = "interview_by", length = 45)
	public String getInterviewBy() {
		return this.interviewBy;
	}
	public void setInterviewBy(String interviewBy) {
		this.interviewBy = interviewBy;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date_of_joining", length = 10)
	public Date getDateOfJoining() {
		return this.dateOfJoining;
	}
	public void setDateOfJoining(Date dateOfJoining) {
		this.dateOfJoining = dateOfJoining;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "interview_date", length = 10)
	public Date getInterviewDate() {
		return this.interviewDate;
	}
	public void setInterviewDate(Date interviewDate) {
		this.interviewDate = interviewDate;
	}

	@Column(name = "status", length = 45)
	public String getStatus() {
		return this.status;
	}
	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "qualification", length = 100)
	public String getQualification() {
		return this.qualification;
	}
	public void setQualification(String qualification) {
		this.qualification = qualification;
	}

	@Column(name = "recrutment_status", length = 45)
	public String getRecrutmentStatus() {
		return this.recrutmentStatus;
	}
	public void setRecrutmentStatus(String recrutmentStatus) {
		this.recrutmentStatus = recrutmentStatus;
	}

	@Column(name = "years_of_experienc", precision = 22, scale = 0)
	public Double getYearsOfExperienc() {
		return this.yearsOfExperienc;
	}
	public void setYearsOfExperienc(Double yearsOfExperienc) {
		this.yearsOfExperienc = yearsOfExperienc;
	}

	@Column(name = "current_employer", length = 50)
	public String getCurrentEmployer() {
		return this.currentEmployer;
	}
	public void setCurrentEmployer(String currentEmployer) {
		this.currentEmployer = currentEmployer;
	}
}